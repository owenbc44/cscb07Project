/**
   * Use to generate historic sales records for Admins
   * 
   * @throws SQLException
   * @throws ClassNotFoundException
   */

  public void viewBooks() throws SQLException, ClassNotFoundException {
    BigDecimal sum = new BigDecimal(0);
    HashMap<String, Integer> totalitemMap = new HashMap<String, Integer>();
    totalitemMap.put("FISHING_ROD", 0);
    totalitemMap.put("HOCKEY_STICK", 0);
    totalitemMap.put("SKATES", 0);
    totalitemMap.put("RUNNING_SHOES", 0);
    totalitemMap.put("PROTEIN_BAR", 0);

    SalesLog salesLog = new SalesLogImpl();
    salesLog = DatabaseSelectHelper.getSales();
    List<SaleImpl> sales = new ArrayList<SaleImpl>();
    sales = salesLog.getSales();
    for (int i = 0; i < sales.size(); i++) {
      sum = sum.add(sales.get(i).getTotalPrice());
      System.out.printf("Customer: <<%s>>\n", sales.get(i).getUser().getName());
      System.out.printf("Purchase Number: <<%d>>\n", sales.get(i).getId());
      System.out.printf("Total Purchase Price: <<%f>>\n", sales.get(i).getTotalPrice());
      System.out.print("Itemized Breakdown:");
      HashMap<ItemImpl, Integer> itemMapForSingleSale = new HashMap<ItemImpl, Integer>();
      itemMapForSingleSale = DatabaseSelectHelper.getItemizedSaleById(sales.get(i).getId());
      int j = 0;
      for (ItemImpl singleItem : itemMapForSingleSale.keySet()) {

        if (j == 0) {
          System.out.printf(" <<%s>>: <<%d>>\n", singleItem.getName(),
              itemMapForSingleSale.get(singleItem));

        } else {
          System.out.printf("                    <<%s>>: <<%d>>\n", singleItem.getName(),
              itemMapForSingleSale.get(singleItem));
        }
        j = j + 1;
        
        int n = totalitemMap.get(singleItem.getName());
        totalitemMap.replace(singleItem.getName(), n + itemMapForSingleSale.get(singleItem));
        

      }
      System.out.println("----------------------------------------");
    }
    for (String item : totalitemMap.keySet()) {
      System.out.printf("Number <<%s>> Sold: <<%d>>\n", item, totalitemMap.get(item));
    }
    System.out.printf("TOTAL SALES: <<%f>>\n", sum);
  }